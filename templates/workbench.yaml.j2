apiVersion: kubeflow.org/v1
kind: Notebook
metadata:
  annotations:
    notebooks.opendatahub.io/inject-oauth: "true"
    notebooks.opendatahub.io/last-image-selection: {{ workbench['image'] }}
    notebooks.opendatahub.io/last-size-selection: {{ workbench['flavor'] }}
    notebooks.opendatahub.io/oauth-logout-url: {{ cluster['rhoai_url'] }}/projects/{{ project }}?notebookLogout={{ workbench_name }}
    opendatahub.io/accelerator-name: {{ workbench['accelerator'] }}
    opendatahub.io/image-display-name: {{ workbench['image_display_name'] }}
    openshift.io/description: {{ workbench_name }}
    openshift.io/display-name: {{ workbench_name }}
    backstage.io/kubernetes-id: {{ workbench_name }}
  labels:
    app: {{ workbench_name }}
    opendatahub.io/dashboard: "true"
    opendatahub.io/odh-managed: "true"
  name: {{ workbench_name }}
  namespace: {{ project }}
spec:
  template:
    spec:
      initContainers:
        - name: test
          image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/{{ workbench['image'] }}
          workingDir: /opt/app-root/src
          envFrom:
            - secretRef:
                name: data-initialization-credentials
          env:
            - name: WORKSHOP_MOUNT_DIR
              value: /opt/app-root/src
          command:
            - python3
            - /data-initialization-script/download_workshop_data.py
          volumeMounts:
            - name: data-initialization-script
              mountPath: /data-initialization-script
            - mountPath: /opt/app-root/src
              name: {{ workbench_name }}
      containers:
      - name: {{ workbench_name }}
        env:
          - name: NOTEBOOK_ARGS
            value: |-
              --ServerApp.port=8888
                                --ServerApp.token=''
                                --ServerApp.password=''
                                --ServerApp.base_url=/notebook/{{ project }}/{{ workbench_name }}
                                --ServerApp.quit_button=False
                                --ServerApp.tornado_settings={"user":"stratus","hub_host":"{{ cluster['rhoai_url'] }}","hub_prefix":"/projects/{{ project }}"}
          - name: JUPYTER_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/{{ workbench['image'] }}
        #envFrom:
        #  - secretRef:
        #      name: <data connection secret name> #CHANGEME
        image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/{{ workbench['image'] }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/{{ project }}/{{ workbench_name }}/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        ports:
          - containerPort: 8888
            name: notebook-port
            protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/{{ project }}/{{ workbench_name }}/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {{ workbench['resources'] }}
        volumeMounts:
          - mountPath: /opt/app-root/src
            name: {{ workbench_name }}
          - mountPath: /dev/shm
            name: shm
        workingDir: /opt/app-root/src
      - name: oauth-proxy
        args:
          - --provider=openshift
          - --https-address=:8443
          - --http-address=
          - --openshift-service-account={{ workbench_name }}
          - --cookie-secret-file=/etc/oauth/config/cookie_secret
          - --cookie-expire=24h0m0s
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
          - --upstream=http://localhost:8888
          - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --email-domain=*
          - --skip-provider-button
          - --openshift-sar={"verb":"get","resource":"notebooks","resourceAPIGroup":"kubeflow.org","resourceName":"{{ workbench_name }}","namespace":"$(NAMESPACE)"}
          - --logout-url={{ cluster['rhoai_url'] }}/projects/{{ project }}?notebookLogout={{ workbench_name }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        image: {{ workbench['oauth_proxy_image'] }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: oauth-proxy
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        ports:
          - containerPort: 8443
            name: oauth-proxy
            protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: oauth-proxy
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
          - mountPath: /etc/oauth/config
            name: oauth-config
          - mountPath: /etc/tls/private
            name: tls-certificates
      enableServiceLinks: false
      serviceAccountName: {{ workbench_name }}
      volumes:
        - name: data-initialization-script
          configMap:
            name: data-initialization-script
            defaultMode: 0777
        - name: {{ workbench_name }}
          persistentVolumeClaim:
            claimName: {{ workbench_name }}
        - emptyDir:
            medium: Memory
          name: shm
        - name: oauth-config
          secret:
            defaultMode: 420
            secretName: {{ workbench_name }}-oauth-config
        - name: tls-certificates
          secret:
            defaultMode: 420
            secretName: {{ workbench_name }}-tls